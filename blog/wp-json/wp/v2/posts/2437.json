{"id":2437,"date":"2015-03-12T21:41:26","date_gmt":"2015-03-12T19:41:26","guid":{"rendered":"http:\/\/stepansuvorov.com\/blog\/?p=2437"},"modified":"2015-03-12T15:39:30","modified_gmt":"2015-03-12T13:39:30","slug":"minimal-set-for-github-oauth-with-angularjs-and-node-js","status":"publish","type":"post","link":"https:\/\/stepansuvorov.com\/blog\/2015\/03\/minimal-set-for-github-oauth-with-angularjs-and-node-js\/","title":{"rendered":"Minimal set for Github OAuth with AngularJS and Node.js"},"content":{"rendered":"<p>I so many times had returned back to this topic that decided to create kind of hint\/note for myself and probably it also could be useful for the\u00a0audience.<\/p>\n<p><!--more--><\/p>\n<h2>Applications on Github<\/h2>\n<p>To make possible github OAuth on your app you first should to register your application <a title=\"https:\/\/github.com\/settings\/applications\" href=\"https:\/\/github.com\/settings\/applications\">there<\/a>. And get set of necessary params:<\/p>\n<ul>\n<li><strong>Client ID<\/strong><\/li>\n<li><strong>Client Secret<\/strong><\/li>\n<\/ul>\n<h2>Algorithm<\/h2>\n<p>I&#8217;ll not go in all the details, because there are a lot of manuals in internet. Only resume. In 7 steps:<\/p>\n<ol>\n<li><strong>web application<\/strong>\u00a0provides user <strong>authorisation link<\/strong> to <strong>github<\/strong><\/li>\n<li><strong>user<\/strong> follows this link and <strong>confirms\u00a0authorisation<\/strong><\/li>\n<li><strong>github<\/strong>\u00a0redirects user back to our site with special <strong>code parameter<\/strong> in url<\/li>\n<li>our <strong>web application<\/strong> gets this <strong>code parameter<\/strong> and sends it to the <strong>server <\/strong><\/li>\n<li><strong>server<\/strong> creates <strong>OAuth request<\/strong> based on this code and our api secret and sends it to\u00a0<strong>github<\/strong><\/li>\n<li><strong>github<\/strong> responses to our <strong>server<\/strong> with <strong>OAuth\u00a0token<\/strong><\/li>\n<li><strong>server<\/strong> provide <strong>token<\/strong> to the <strong>web application<\/strong><\/li>\n<\/ol>\n<h2>Authorisation link<\/h2>\n<p>it&#8217;s just a link of such format:<\/p>\n<pre>https:\/\/github.com\/login\/oauth\/authorize?client_id=%YOUR_APP_ID%<\/pre>\n<h2>Web Application part<\/h2>\n<p>I&#8217;ve created simple example of <strong>Angular service<\/strong> that will send <strong>code<\/strong> parameter to the server:<\/p>\n<p>[javascript]<br \/>\nangular.module(&#8216;config-builder&#8217;)<br \/>\n  .service(&#8216;Github&#8217;, function($http) {<\/p>\n<p>    var token = null;<\/p>\n<p>    this.getTokenPromise = function(code) {<br \/>\n      return $http.get(&#8216;\/api\/github\/token\/&#8217; + code).then(function(result){<br \/>\n        token = result.data.access_token;<br \/>\n      });<br \/>\n    };<br \/>\n  });<br \/>\n[\/javascript]<\/p>\n<h2>Server side<\/h2>\n<p>And server side part to send OAuth token request:<\/p>\n<p>[javascript]<br \/>\napp.get(&#8216;\/api\/github\/token\/:code&#8217;, function(req, res) {<br \/>\n  request.post({<br \/>\n    uri: &#8216;https:\/\/github.com\/login\/oauth\/access_token&#8217;,<br \/>\n    form: {<br \/>\n      client_id: &#8216;%YOUR_APP_ID%&#8217;,<br \/>\n      client_secret: &#8216;%YOUR_APP_SECRET%&#8217;,<br \/>\n      code: req.params.code<br \/>\n    },<br \/>\n    json: true<br \/>\n  }, function(err, httpResponse, body) {<br \/>\n    if (err) {<br \/>\n      res.send(500, { error: err });<br \/>\n      return;<br \/>\n    }<br \/>\n    res.send(body);<br \/>\n  });<br \/>\n});<br \/>\n[\/javascript]<\/p>\n<p><strong>app<\/strong> &#8211; is an instance of <a title=\"http:\/\/expressjs.com\/\" href=\"http:\/\/expressjs.com\/\">express<\/a> framework in this case.<\/p>\n<p>That&#8217;s all!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>I so many times had returned back to this topic that decided to create kind of hint\/note for myself and probably it also could be useful for the\u00a0audience.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4],"tags":[359,103,360],"_links":{"self":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/2437"}],"collection":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/comments?post=2437"}],"version-history":[{"count":4,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/2437\/revisions"}],"predecessor-version":[{"id":2443,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/2437\/revisions\/2443"}],"wp:attachment":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/media?parent=2437"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/categories?post=2437"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/tags?post=2437"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}