{"id":3125,"date":"2016-09-12T19:43:29","date_gmt":"2016-09-12T17:43:29","guid":{"rendered":"http:\/\/stepansuvorov.com\/blog\/?p=3125"},"modified":"2016-09-14T16:12:23","modified_gmt":"2016-09-14T14:12:23","slug":"angular-es6-promise","status":"publish","type":"post","link":"https:\/\/stepansuvorov.com\/blog\/2016\/09\/angular-es6-promise\/","title":{"rendered":"Angular + ES6 Promise"},"content":{"rendered":"<p>It would be really nice if we could use native <strong>ECMAScript 2015<\/strong> <strong>Promises<\/strong> with <strong>Angular<\/strong> instead of <strong>$q<\/strong> service that is provided from box to be close to pure JavaScript:<\/p>\n<p>[javascript]<br \/>\n\/\/somewhere inside component controller<br \/>\nlet promise = new Promise((resolve) =&gt; setTimeout(() =&gt; resolve(&#8216;resolved&#8217;), 2000));<br \/>\npromise.then(x =&gt; this.x = x);<br \/>\n[\/javascript]<\/p>\n<p>But in this case we will have to run <strong>digest<\/strong> manually for each resolve(to synchronise view and model):<\/p>\n<p>[javascript]<br \/>\nlet promise = new Promise((resolve) =&gt; setTimeout(() =&gt; resolve(&#8216;resolved&#8217;), 2000));<br \/>\npromise.then(x =&gt; {<br \/>\n  $scope.apply();<br \/>\n  this.x = x;<br \/>\n});<br \/>\n[\/javascript]<\/p>\n<p>But what if we hack the <strong>Promise<\/strong> and intercept our <strong>digest<\/strong> call there:<\/p>\n<p><!--more--><\/p>\n<p>[javascript]<br \/>\nclass SubPromise extends Promise {<br \/>\n  constructor(executor) {<br \/>\n    super(function(_resolve, _reject) {<br \/>\n      var resolve = (data) =&gt; {<br \/>\n        var res = _resolve(data);<br \/>\n        angular.element(document.body).injector().get(&#8216;$rootScope&#8217;).$apply();<br \/>\n        return res;<br \/>\n      }<br \/>\n      return executor(resolve, _reject);<br \/>\n    });<br \/>\n  }<br \/>\n}<br \/>\n[\/javascript]<\/p>\n<p>now we just need to overwrite standard <strong>Promise<\/strong>:<\/p>\n<p>[javascript]<br \/>\nwindow.Promise = SubPromise;<br \/>\n[\/javascript]<\/p>\n<p>to keep it simple to cover for <strong>unit-tests<\/strong> you can also wrap it into an angular <strong>factory<\/strong>:<\/p>\n<p>[javascript]<br \/>\nfactory(&#8216;Promise&#8217;, () =&gt; Promise);<br \/>\n[\/javascript]<\/p>\n<p><a href=\"http:\/\/plnkr.co\/edit\/fysuo9?p=preview\">Here<\/a> you can play with the\u00a0code.<\/p>\n<p><a href=\"http:\/\/stackoverflow.com\/q\/35971958\/274500\">Discussion on stackoverflow<\/a> about customising ES6 Promise.<\/p>\n<p><strong>!Attention:<\/strong>\u00a0This experiment was made just for learning purposes and it should not be applied for the\u00a0real projects.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>It would be really nice if we could use native ECMAScript 2015 Promises with Angular instead of $q service that is provided from box to be close to pure JavaScript: [javascript] \/\/somewhere inside component controller let promise = new Promise((resolve) &hellip; <a href=\"https:\/\/stepansuvorov.com\/blog\/2016\/09\/angular-es6-promise\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4],"tags":[120,226,17,244],"_links":{"self":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3125"}],"collection":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/comments?post=3125"}],"version-history":[{"count":5,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3125\/revisions"}],"predecessor-version":[{"id":3131,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3125\/revisions\/3131"}],"wp:attachment":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/media?parent=3125"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/categories?post=3125"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/tags?post=3125"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}