{"id":3261,"date":"2016-12-11T17:52:17","date_gmt":"2016-12-11T15:52:17","guid":{"rendered":"http:\/\/stepansuvorov.com\/blog\/?p=3261"},"modified":"2017-03-17T00:52:40","modified_gmt":"2017-03-16T22:52:40","slug":"ng-be-2016-brief-review","status":"publish","type":"post","link":"https:\/\/stepansuvorov.com\/blog\/2016\/12\/ng-be-2016-brief-review\/","title":{"rendered":"ng-be 2016. brief review"},"content":{"rendered":"<p>great\u00a0organisation, great speakers, great conference, unfortunately I don&#8217;t have time for detailed overview and provide you only with brief-brief notes.<\/p>\n<p><!--more--><\/p>\n<h2>Keynote or &#8220;don&#8217;t worry about Angular4&#8221; by <a href=\"https:\/\/twitter.com\/IgorMinar\">Igor Minar<\/a>\u00a0(<a href=\"https:\/\/www.youtube.com\/watch?v=aJIMoLgqU_o\">video<\/a>)<\/h2>\n<p>The main point was the Angular team goes to <a href=\"http:\/\/semver.org\/\">semver<\/a> versioning and they are going to produce major candidate each half year, so we will see <del>Angular3<\/del> <strong>Angular4<\/strong> already in march 2017 and so on:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3262\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2017\/02\/Screen-Shot-2017-02-11-at-18.12.31.png\" alt=\"\" width=\"348\" height=\"79\" \/><\/p>\n<p>So Angular2 is just Angular, and Angular1 is AngularJS. That&#8217;s all you need to know about naming.<\/p>\n<p>I had a chance to ask Igor about missing documentation for ng2 library creation. And he promised to take care about it the following week. And unfortunately after a month it&#8217;s still a draft<\/p>\n<blockquote class=\"twitter-tweet\" data-lang=\"en\">\n<p dir=\"ltr\" lang=\"en\"><a href=\"https:\/\/twitter.com\/IgorMinar\">@IgorMinar<\/a> on <a href=\"https:\/\/twitter.com\/ngbeconf\">@ngbeconf<\/a> you promised to take care about docs &#8220;how to create Angular library&#8221;. how is it going with it?<\/p>\n<p>\u2014 Stepan Suvorov (@stevermeister) <a href=\"https:\/\/twitter.com\/stevermeister\/status\/819527760678973440\">January 12, 2017<\/a><\/p><\/blockquote>\n<p><script async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script><\/p>\n<h2>Reactive parenting with Angular 2 by\u00a0<a href=\"https:\/\/twitter.com\/pkozlowski_os\">Pawel Kozlowski<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=EMjTp12VbQ8\">video<\/a>)<\/h2>\n<p>Pavel explained the\u00a0<strong><a href=\"https:\/\/angular.io\/docs\/ts\/latest\/api\/core\/index\/ViewContainerRef-class.html\">ViewContainerRef<\/a><\/strong>\u00a0concept and own <strong>ngIf<\/strong> implementation based on it. A lot of unclear diagram illustrations that make complex topic event more complex. After he\u00a0should how to build popover(component) that will be dynamically inserted into the view with help of <strong><a href=\"https:\/\/angular.io\/docs\/ts\/latest\/api\/core\/index\/ComponentFactoryResolver-class.html\">ComponentFactoryResolver<\/a><\/strong>\u00a0and <strong><a href=\"https:\/\/angular.io\/docs\/ts\/latest\/api\/core\/index\/NgModule-interface.html#!#entryComponents-anchor\">entryComponents<\/a><\/strong> ngModel property.<\/p>\n<p>Be prepared that to understand that material you will have to watch the video 2-3 times.<\/p>\n<h2>Boosting the security of your Angular 2 by\u00a0<a href=\"https:\/\/twitter.com\/philippederyck\">Philippe De Ryck<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=l89acmnGMSc\">video<\/a>)<\/h2>\n<p>Angular is providing some XSS security content escaping out of the box. If you want to skip the escaping you can use one of bypass strategies:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3302\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2016\/12\/Screen-Shot-2017-03-16-at-22.51.05.png\" alt=\"\" width=\"320\" height=\"106\" \/><\/p>\n<p>Use AOT to make it even safer (no evals).<\/p>\n<p>How to prevent XSS when it&#8217;s already there: <strong>Content Security Policy<\/strong> (CSP) is a new browser security policy. Could be delivered <strong>in headers<\/strong> or in <strong>meta<\/strong> tags.<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3303\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2016\/12\/Screen-Shot-2017-03-16-at-22.57.12.png\" alt=\"\" width=\"535\" height=\"161\" \/><\/p>\n<p>You can use google\u00a0<a href=\"https:\/\/csp-evaluator.withgoogle.com\/\">csp-evaluator<\/a> to check your site.<\/p>\n<h2>Unleashing the power of GraphQL by <a href=\"https:\/\/twitter.com\/gerardsans\">Gerard Sans<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=VYpJ9pfugM8\">video<\/a>)<\/h2>\n<p>Facebook started with GraphQL 2012 for Mobile Native Teams, from 2015 it&#8217;s opensourced. github migrated their api to graphQl in 2016.<\/p>\n<p>query-data one-to-one relation:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3304\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2016\/12\/Screen-Shot-2017-03-16-at-23.15.04.png\" alt=\"\" width=\"351\" height=\"121\" \/><\/p>\n<p>Nice intro GraphQL and a lot of examples of Angular implementation.<\/p>\n<h2>Angular the Application Architecture software the Scalable by <a href=\"https:\/\/twitter.com\/mgechev\">Minko&#8217;s Gechev<\/a> ( <a href=\"https:\/\/www.youtube.com\/watch?v=gtOPAj9_FSM\">Video<\/a> )<\/h2>\n<p>First part was too abstract and about nothing, second part was about Redux integration that was also not so obvious.<\/p>\n<h2>Angular and React by\u00a0<a href=\"https:\/\/twitter.com\/PascalPrecht\">Pascal Precht<\/a> &amp; <a href=\"https:\/\/twitter.com\/DJCordhose\">Oliver Zeigermann<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=FIi6AkI7wKE\">video<\/a>)<\/h2>\n<ul>\n<li>runtime performance tuning (rendering drag and drop for svg-boxes. improved performance with onPush and Immutable objects)<\/li>\n<li>server-side rendering (how to setup SSR, Angular more complex in terms of setup)<\/li>\n<li>3rd-party library integration<\/li>\n<\/ul>\n<p>I guaranty that you would like to return back to this presentation and watch it again.<\/p>\n<h2>Practical AngularJS DevOps by <a href=\"https:\/\/twitter.com\/nicktrog\">Nick Trogh<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=x-BRn7aRrA4\">video<\/a>)<\/h2>\n<p>Talk was about using Microsoft DevOps tool from Microsoft guy with mentioning some obvious things between this and then.<\/p>\n<h2>Start-up Performance with Lazy Loading by\u00a0<a href=\"https:\/\/twitter.com\/ManfredSteyer\">Manfred Steyer<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=i0y5bJx8RFc\">video<\/a>)<\/h2>\n<ul>\n<li><strong>Lazy Loading<\/strong> base idea and implementation<\/li>\n<li><strong>canLoad<\/strong> guard to prevent loading<\/li>\n<li><strong>Preloading<\/strong> and <strong>Preloading strategy<\/strong><\/li>\n<li>The right way of doing <strong>Shared Module<\/strong><\/li>\n<\/ul>\n<p><a href=\"https:\/\/github.com\/manfredsteyer\/preloading-ngbe-2016\">Sources<\/a>.<\/p>\n<h2>Angular 2 Forms by\u00a0<a href=\"https:\/\/twitter.com\/toddmotto\">Todd Motto<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=8CbZCmAwBCc\">video<\/a>)<\/h2>\n<p>There are 2 approaches:<\/p>\n<ul>\n<li>template driven<\/li>\n<li>reactive<\/li>\n<\/ul>\n<p>Parts of reactive one:<\/p>\n<ul>\n<li>FormControl &#8211; Control<\/li>\n<li>FromGroup &#8211; Group of Controls<\/li>\n<li>FromArray &#8211; Array of Controls<\/li>\n<li>FromBuilder &#8211; Helper to generate Controls<\/li>\n<li>Validators<\/li>\n<\/ul>\n<p>Than Todd showed really nice example of dynamic forms &#8211; <a href=\"https:\/\/github.com\/toddmotto\/angular-pizza-creator\">Pizza Creator<\/a>\u00a0and explained its\u00a0code. The most interesting part &#8211; custom controls (from <a href=\"https:\/\/youtu.be\/8CbZCmAwBCc?t=18m36s\">18:36<\/a>) by using <a href=\"https:\/\/angular.io\/docs\/ts\/latest\/api\/forms\/index\/ControlValueAccessor-interface.html\">ControlValueAccessor<\/a>. The most exciting part about keyboard control: so you have native behaviour on your custom controls.<\/p>\n<h2>Making SVG and Canvas Graphics by\u00a0<a href=\"https:\/\/twitter.com\/teropa\">Tero Parviainen<\/a> (<a href=\"https:\/\/www.youtube.com\/watch?v=30li6w62eCo\">video<\/a>)<\/h2>\n<p>First part is about <strong>SVG<\/strong> in general and several hint what to do with it in Angular:<\/p>\n<ul>\n<li>use the <strong>svg:<\/strong> namespace prefix<\/li>\n<li>use the <strong>attr.<\/strong> prefix for binding to attributes<\/li>\n<li>don&#8217;t use element selectors for components<\/li>\n<\/ul>\n<p>The same for <strong>canvas<\/strong>:<\/p>\n<ul>\n<li>put a &lt;canvas&gt; tag in a component template<\/li>\n<li>give it a reference variable name<\/li>\n<li>inject to component class as @ViewChild()<\/li>\n<li>draw from component lifecycle hooks<\/li>\n<\/ul>\n<p>and for <strong>SVG animations<\/strong>:<\/p>\n<ul>\n<li>use CSS for simple things<\/li>\n<li>use <strong>ngAnimate<\/strong> for tighter integration<\/li>\n<li>use <strong><a href=\"https:\/\/greensock.com\/\">Greensock<\/a><\/strong> for complex animations or better browser compatibility<\/li>\n<\/ul>\n<p>and the thing about <strong>canvas animations<\/strong>, that you need to take\u00a0<strong>requestAnimationFrame()<\/strong> out of Angular Zone:<\/p>\n<p>[javascript]<br \/>\nthis.ngZone.runOutsideAngular(() =&amp;gt; this.paint(true));<br \/>\n[\/javascript]<\/p>\n<p><a href=\"https:\/\/github.com\/teropa\/ng-gfx-demos\">Source code<\/a> for all the demos.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>great\u00a0organisation, great speakers, great conference, unfortunately I don&#8217;t have time for detailed overview and provide you only with brief-brief notes.<\/p>\n","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[4],"tags":[185,463],"_links":{"self":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3261"}],"collection":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/comments?post=3261"}],"version-history":[{"count":9,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3261\/revisions"}],"predecessor-version":[{"id":3305,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3261\/revisions\/3305"}],"wp:attachment":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/media?parent=3261"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/categories?post=3261"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/tags?post=3261"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}