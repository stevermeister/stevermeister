{"id":3480,"date":"2017-12-09T19:54:12","date_gmt":"2017-12-09T17:54:12","guid":{"rendered":"http:\/\/stepansuvorov.com\/blog\/?p=3480"},"modified":"2018-02-18T13:23:25","modified_gmt":"2018-02-18T11:23:25","slug":"ng-be-2017-brief-review","status":"publish","type":"post","link":"https:\/\/stepansuvorov.com\/blog\/2017\/12\/ng-be-2017-brief-review\/","title":{"rendered":"ng-be 2017. brief review"},"content":{"rendered":"<h1><img decoding=\"async\" loading=\"lazy\" class=\"alignnone  wp-image-3513\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2017\/12\/2017-12-17-13.35.11.jpg\" alt=\"\" width=\"227\" height=\"300\" \/><\/h1>\n<p><!--more--><\/p>\n<h1>Pascal Precht &#8211; Angular Elements\u00a0 (<a href=\"https:\/\/www.youtube.com\/watch?v=Hi2lRWUDuHA\">video<\/a>, <a href=\"http:\/\/pascalprecht.github.io\/slides\/angular-elements\">slides<\/a>, <a href=\"https:\/\/stackblitz.com\/edit\/ng-be-2017-demo-material\">code<\/a>\u00a0)<\/h1>\n<p><strong>Angular Elements<\/strong> is <span style=\"text-decoration: underline;\">very experimental<\/span> from <strong>Angular Labs<\/strong>. Reference to Rob Wormald&#8217;s talk\u00a0&#8220;<a href=\"https:\/\/www.youtube.com\/watch?v=ljsOPm4MMEo\">A Glimpse at Angular Elements<\/a>&#8220;.<\/p>\n<p>Why do we need it?\u00a0It&#8217;s still tricky to use Angular <strong>outside<\/strong> of Angular applications for:<\/p>\n<ul>\n<li>reusability<\/li>\n<li>CMS pages<\/li>\n<li>widgets<\/li>\n<\/ul>\n<p><a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/Web_Components\">WebComponents<\/a> could help to achieve this. Then Pascal made a quick introduction of main parts of web components: templates, html\u00a0imports, shadow DOM and\u00a0<strong>custom elements<\/strong>:<\/p>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3482\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2017\/12\/Screen-Shot-2017-12-10-at-11.35.09.png\" alt=\"\" width=\"953\" height=\"229\" \/><\/p>\n<p>CustomElements pretty close to Angular Components:<\/p>\n<table>\n<tbody>\n<tr class=\"fragment visible\" data-fragment-index=\"0\">\n<td><code>@HostBinding()<\/code><\/td>\n<td>\u2192<\/td>\n<td>Attributes<\/td>\n<\/tr>\n<tr class=\"fragment visible\" data-fragment-index=\"1\">\n<td><code>@Input()<\/code><\/td>\n<td>\u2192<\/td>\n<td>Properties<\/td>\n<\/tr>\n<tr class=\"fragment visible\" data-fragment-index=\"2\">\n<td><code>@Output()<\/code><\/td>\n<td>\u2192<\/td>\n<td><code>CustomEvent()<\/code><\/td>\n<\/tr>\n<tr class=\"fragment visible current-fragment\" data-fragment-index=\"3\">\n<td>Lifecycle Hooks<\/td>\n<td>\u2192<\/td>\n<td>Reactions<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>so..\u00a0<strong>Angular Elements<\/strong> &#8211; Angular Components packaged into Custom Elements:<\/p>\n<ul>\n<li>self-bootstrapping<\/li>\n<li>Hosts Angular Component inside Custom Element<\/li>\n<li>Bridges DOM APIs and Angular APIs<\/li>\n<\/ul>\n<p><img decoding=\"async\" loading=\"lazy\" class=\"alignnone size-full wp-image-3483\" src=\"https:\/\/stepansuvorov.com\/blog\/wp-content\/uploads\/2017\/12\/Screen-Shot-2017-12-10-at-11.46.40.png\" alt=\"\" width=\"1006\" height=\"412\" \/><\/p>\n<p>and then it was a life coding with <a href=\"https:\/\/stackblitz.com\/edit\/ng-be-2017-demo-hello-world\">Hello World<\/a> and <a href=\"https:\/\/stackblitz.com\/edit\/ng-be-2017-demo-material\">Material Components<\/a> examples.<\/p>\n<p>P.S.: 2 or 3\u00a0 years ago we have implemented the same concept for AngularJs, React and Backbone wrapped into CustomElements, you can check it <a href=\"https:\/\/github.com\/MVC-Elements\">here<\/a>.<\/p>\n<h1><\/h1>\n<h1>Uri Shaked &#8211; Static website with Angular (<a href=\"https:\/\/www.youtube.com\/watch?v=vE516nAUwFI\">video<\/a>, <a href=\"https:\/\/docs.google.com\/presentation\/d\/17QG0ATttFhAPBREOQln3guw1ch6ozdWGCVWtw93ysxM\/edit#slide=id.p\">slides<\/a>, <a href=\"https:\/\/github.com\/patrickmichalina\/fusebox-angular-universal-starter\">code<\/a> )<\/h1>\n<p>Uri did a lot of life coding from scratch.<\/p>\n<p>the goal:<\/p>\n<ul>\n<li>component-based architecture<\/li>\n<li>content shows immediately<\/li>\n<li>no server-side code<\/li>\n<\/ul>\n<p>Project from scratch step-by-step:<\/p>\n<ul>\n<li>dependencies<\/li>\n<li>app skeleton<\/li>\n<li>module definition<\/li>\n<li>a component with a template<\/li>\n<\/ul>\n<p>for this moment we&#8217;ve done with a part that usually CLI does for us<\/p>\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\">I think he wanted to show what is required when building a (universal) Angular app from scratch.<\/p>\n<p>I found it very interesting to see, cuz I&#39;m basically helpless without CLI tooling.<\/p>\n<p>&mdash; Pascal Precht \u0295\u2022\u032b\u0361\u2022\u0294 \ud83d\udc26 (@PascalPrecht) <a href=\"https:\/\/twitter.com\/PascalPrecht\/status\/939064081121726464?ref_src=twsrc%5Etfw\">December 8, 2017<\/a><\/p><\/blockquote>\n<p><script async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script><\/p>\n<p>But after it was something really nice:<\/p>\n<p>We used <strong><a href=\"http:\/\/fuse-box.org\/\">Fuse-Box<\/a><\/strong> instead of webpack and I was impressed by the speed of recompilation.<\/p>\n<p>We integrated\u00a0<strong>Angular Universal<\/strong> rendering, but not for server-side\u00a0prerendering, but only for first compilation to provide page immediately. So server-side rendering without a server. I like the idea, but unfortunately not very useful when your data is constantly updating and you have routes.<\/p>\n<p>Some nice extra resources:<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/alex-klock\/ng2-fused\">ng2-fused<\/a> &#8211; plugin for fuse-box<\/li>\n<li><a href=\"https:\/\/github.com\/angular\/preboot\">preboot<\/a> &#8211;\u00a0 a library\u00a0to help manage the transition of state<\/li>\n<li><a href=\"https:\/\/github.com\/patrickmichalina\/fusebox-angular-universal-starter\">fusebox-angular-universal-starter<\/a><\/li>\n<\/ul>\n<h1><\/h1>\n<h1>Juri Strumpflohner &#8211; Create and publish Angular libs like a Pro (<a href=\"https:\/\/www.youtube.com\/watch?v=K4YMmwxGKjY\">video<\/a>, <a href=\"https:\/\/docs.google.com\/presentation\/d\/1KzitBVVepOxgS-gxejehKC4V27ENeFMQ6Gwwrw5O9AE\/edit#slide=id.g2b6eab8706_0_12\">slides<\/a>)<\/h1>\n<p>It&#8217;s great that question that I asked Igor Minar <a href=\"https:\/\/stepansuvorov.com\/blog\/2016\/12\/ng-be-2016-brief-review\/\">previous ng-be<\/a> now was represented in such a detailed way by Juri.<\/p>\n<p>Main parts:<\/p>\n<ul>\n<li>there is already an <strong><a href=\"https:\/\/docs.google.com\/document\/d\/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs\/edit\">Angular Package Format<\/a><\/strong><\/li>\n<li>take care of <strong><a href=\"https:\/\/nodejs.org\/en\/blog\/npm\/peer-dependencies\/\">PeerDependencies<\/a><\/strong><\/li>\n<li>inline your assets (templates, css)<\/li>\n<li>FESM &#8211; literally put all in one file (or a single ES Module)<\/li>\n<li>compile into different formats(umd, es5, es2015) and specify paths in package.json<\/li>\n<\/ul>\n<p>After Juri recommended some\u00a0nice tools to automate the process:<\/p>\n<ul>\n<li><a href=\"https:\/\/www.npmjs.com\/package\/semantic-release\">semantic-release<\/a><\/li>\n<li>travis-ci<\/li>\n<\/ul>\n<p>and ready package managers to do all the work:<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/jvandemo\/generator-angular2-library\">generator-angular2-library<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/dherges\/ng-packagr\">ng-packagr<\/a><\/li>\n<\/ul>\n<p>and keep eye on Angular CLI Schematics!<\/p>\n<h1>Vincent Ogloblinsky\u200f &#8211; Hidden gems of TS compiler (<a href=\"https:\/\/www.youtube.com\/watch?v=WkJagE7b5U0\">video<\/a>, <a href=\"http:\/\/slides.com\/vogloblinsky\/hidden-gems-of-typescript-compiler#\/\">slides<\/a>)<\/h1>\n<p>First Vincent explained what regular compiler does, and it:<\/p>\n<ul>\n<li>parsing\n<ul>\n<li>lexical analysis<\/li>\n<li>syntax\u00a0analysis<\/li>\n<\/ul>\n<\/li>\n<li>transforming<\/li>\n<li>generation<\/li>\n<\/ul>\n<p>TS is doing quite the same:<\/p>\n<ul>\n<li>scanner<\/li>\n<li>parser<\/li>\n<li>binder<\/li>\n<li>checker<\/li>\n<li>emitter<\/li>\n<\/ul>\n<p>What else we can do with AST?<\/p>\n<ul>\n<li>linting<\/li>\n<li>complexity check<\/li>\n<li>docs<\/li>\n<li>API<\/li>\n<\/ul>\n<p>Some nice tools to check:<\/p>\n<ul>\n<li><a href=\"https:\/\/compodoc.github.io\/website\/\">compodoc<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/pahen\/madge\">madge<\/a><\/li>\n<li><a href=\"https:\/\/github.com\/compodoc\/madge3d\">madge3d<\/a><\/li>\n<\/ul>\n<p>I think the main thing of that presentation was<\/p>\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\">\n<p lang=\"en\" dir=\"ltr\"><a href=\"https:\/\/twitter.com\/ngbeconf?ref_src=twsrc%5Etfw\">@ngbeconf<\/a> <a href=\"https:\/\/twitter.com\/vogloblinsky?ref_src=twsrc%5Etfw\">@vogloblinsky<\/a> inspires to use <a href=\"https:\/\/twitter.com\/hashtag\/Typescript?src=hash&amp;ref_src=twsrc%5Etfw\">#Typescript<\/a> not only like a &quot;backbox&quot; tool but also like a library.<\/p>\n<p>&mdash; Stepan Suvorov (@stevermeister) <a href=\"https:\/\/twitter.com\/stevermeister\/status\/939081719872983040?ref_src=twsrc%5Etfw\">December 8, 2017<\/a><\/p><\/blockquote>\n<p><script async src=\"https:\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script><\/p>\n<p>&nbsp;<\/p>\n<h1>Philippe De Ryck &#8211;\u00a0Cookies versus tokens: a paradoxical choice\u00a0(<a href=\"https:\/\/www.youtube.com\/watch?v=9ZOpUtQ_4Uk\">video<\/a>)<\/h1>\n<p>Philippe never ceases to amaze me by uncovering hidden parts of obvious (from the first look) topic &#8211; sessions.<\/p>\n<p>The talk was divided into 3 parts:<\/p>\n<ul>\n<li><strong>where<\/strong> to store the data (locality):\n<ul>\n<li>old school sessions (server side)<\/li>\n<li>JSON Web Tokens (client side)\n<ul>\n<li><strong>!important<\/strong>: don&#8217;t forget to verify the key! (not just decode the data)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<li><strong>how<\/strong> to store\n<ul>\n<li>cookies\n<ul>\n<li>handled automatically<span style=\"color: #339966;\">\u00a0\u00a0\u2714<\/span><\/li>\n<li>difficult to secure\u00a0 <span style=\"color: #ff0000;\">\u00a0\u2718<\/span><\/li>\n<li>problems to support outside a browser\u00a0<span style=\"color: #339966;\">\u2714<\/span><\/li>\n<li>enable <a href=\"https:\/\/en.wikipedia.org\/wiki\/Cross-site_request_forgery\">Cross-Site Request Forgery attacks<\/a> (<a href=\"https:\/\/youtu.be\/9ZOpUtQ_4Uk?t=11m48s\">11:48<\/a>)\u00a0<span style=\"color: #ff0000;\">\u2718<\/span><\/li>\n<\/ul>\n<\/li>\n<li>auth headers\n<ul>\n<li>not handled automatically (and not present on all the requests)\u00a0<span style=\"color: #ff0000;\">\u2718<\/span><\/li>\n<li>do not enable \u00a0Cross-Site Request Forgery\u00a0\u00a0\u00a0<span style=\"color: #339966;\">\u2714<\/span><\/li>\n<li>easy to support outside a browser\u00a0\u00a0\u00a0\u00a0<span style=\"color: #339966;\">\u2714<\/span><\/li>\n<li>looks secure\u00a0\u00a0<span style=\"color: #339966;\">\u2714<\/span>\n<ul>\n<li>don&#8217;t forget about whitelist implementing angular interceptors (<a href=\"https:\/\/youtu.be\/9ZOpUtQ_4Uk?t=18m8s\">18:08<\/a>)<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<\/li>\n<li>how to <strong>transport<\/strong>\n<ul>\n<li>cookie &#8211; httpOnly<\/li>\n<li>localStorage &#8211; not secure enough\u00a0\u00a0<span style=\"color: #ff0000;\">\u2718<\/span><\/li>\n<li><a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/API\/Window\/sessionStorage\">sessionStorage<\/a> <span style=\"color: #339966;\">\u2714<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<h1>Maxim Salnikov &#8211;\u00a0Creating an Angular Progressive Web App (<a href=\"https:\/\/www.youtube.com\/watch?v=LufnOxBbn0M\">video<\/a>, <a href=\"http:\/\/slides.com\/webmax\/pwa-ng-be#\/\">slides<\/a>)<\/h1>\n<p>The whole Maxim&#8217;s presentation I had a feeling that I&#8217;m watching a video on x2 speed.<\/p>\n<p>Starting from angular-cli 1.6 you can create your Angular application with\u00a0ServiceWorkers by one command:<\/p>\n<pre>ng new app --service-worker<\/pre>\n<p>Unfortunately, you cannot use webpack dev server, so you need to build it first:<\/p>\n<pre>ng build --prod<\/pre>\n<p>and then run with a static web server\u00a0on dist folder (I use <a href=\"https:\/\/www.npmjs.com\/package\/http-server\">http-server<\/a> for it):<\/p>\n<pre>http-server .\/dist<\/pre>\n<p>still does not work with ng-cli server :(<\/p>\n<p>register NGSW: import ServiceWorkerModule<\/p>\n<p>caching strategies: <strong>freshness<\/strong> vs <strong>performance<\/strong><\/p>\n<p>&nbsp;<\/p>\n<h1>Manfred Steyer &#8211;\u00a0Angular&#8217;s new HttpClient (<a href=\"https:\/\/www.youtube.com\/watch?v=GFX6tsSLwYQ\">video<\/a>, <a href=\"https:\/\/speakerdeck.com\/manfredsteyer\/a-close-look-to-angulars-new-httpclient\">slides<\/a>)<\/h1>\n<ul>\n<li>custom data formats\n<ul>\n<li>work with XML<\/li>\n<\/ul>\n<\/li>\n<li>progress information\n<ul>\n<li>by subscribing to an event<\/li>\n<\/ul>\n<\/li>\n<li>interceptors for extensions<\/li>\n<\/ul>\n<p>and lot of life coding with Interceptors&#8230;<\/p>\n<h1>Aimee Knight &#8211;\u00a0Pulling Back the Curtains From Your Stylesheets (<a href=\"https:\/\/www.youtube.com\/watch?v=eajyNEsdx4k\">video<\/a>)<\/h1>\n<p>Aimee presented low-level browser html\/css\u00a0life cycle.<\/p>\n<p><strong>binary<\/strong> -&gt; <strong>text<\/strong> -&gt; <strong>tokenizer<\/strong> -&gt; <strong>parser<\/strong> -&gt; <strong>tree structure<\/strong> (<strong>DOM<\/strong>)<\/p>\n<p><em>&#8230;lots of text on slides that had been just read&#8230;<\/em><\/p>\n<h1>Asim Hussain &#8211;\u00a0How to hack an Angular app? (<a href=\"https:\/\/www.youtube.com\/watch?v=TDl53qqODQI\">video<\/a>, <a href=\"https:\/\/www.slideshare.net\/jawache\/how-to-hack-a-node-app-gdg-devfest-ukraine-2017\">slides<\/a>)<\/h1>\n<p>Asim told us 3 hacker break-in stories that based on simple things.<\/p>\n<p>Story1: Github story<\/p>\n<p>git hook to localhost -&gt; http:\/\/0:9200\/_shutdown -&gt; http:\/\/0:email -&gt; memcache -&gt; deprecated python library<\/p>\n<p>moral: don&#8217;t underestimate small things<\/p>\n<p>Story2: Equifax<\/p>\n<p>moral: use latest versions of your software to be sure that there are no known vulnerabilities<\/p>\n<p>Story3:<\/p>\n<p>moral: <span style=\"text-decoration: underline;\">don&#8217;t trust npm by default<\/span>, there are fake npm packages.<\/p>\n<h2>Dominic Elm &#8211;\u00a0Taming snakes with reactive streams (<a href=\"https:\/\/www.youtube.com\/watch?v=j6WTrL_tHQk\">video<\/a>, <a href=\"https:\/\/speakerdeck.com\/d3lm\/taming-snakes-with-reactive-streams\">slides<\/a>)<\/h2>\n<p>Why reactive?<\/p>\n<ul>\n<li>dom events<\/li>\n<li>http requests<\/li>\n<li>web sockets<\/li>\n<li>animations<\/li>\n<li>&#8230;<\/li>\n<\/ul>\n<p>How to think reactively?<\/p>\n<p>No side effects!<\/p>\n<p>Approach<\/p>\n<ol>\n<li>split into small parts<\/li>\n<li>define a trigger<\/li>\n<li>compose all together<\/li>\n<\/ol>\n<h1>Ay\u015feg\u00fcl Y\u00f6net &#8211;\u00a0Performant Augmented Reality for the Web (<a href=\"https:\/\/www.youtube.com\/watch?v=khDIbNMIbkA\">video<\/a>, <a href=\"https:\/\/docs.google.com\/presentation\/d\/1n68BtDWgpkZgZ5QXOIJXnrntsVH9NZoTAzQ_UhCy05E\/edit#slide=id.gc6f919934_0_0\">slides<\/a>)<\/h1>\n<p>Some information about\u00a0VR and\u00a0AR.<\/p>\n<p>Technologies to achieve &#8211;\u00a0WebGL &amp; WebRTC<\/p>\n<p>Libraries &#8211; <a href=\"https:\/\/github.com\/google-ar\/three.ar.js\">Three.ar.js<\/a><\/p>\n<p>Switch <strong>ngZone<\/strong> for all project (not to run for each rendering)- now possible with ng5:<\/p>\n<p><strong>bootstrapModule(AppModule, { ngZone: &#8216;noop&#8217;})<\/strong><\/p>\n<h1>Todd Motto &#8211;\u00a0Angular Architecture: From Patterns to Implementation\u00a0(<a href=\"https:\/\/www.youtube.com\/watch?v=vGKRKDPGUSs\">video<\/a>, slides)<\/h1>\n<p>Toooo architectural abstraction with pizza restaurant at the end of the day&#8230;<\/p>\n","protected":false},"excerpt":{"rendered":"","protected":false},"author":1,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":{"footnotes":""},"categories":[350],"tags":[185,463],"_links":{"self":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3480"}],"collection":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/comments?post=3480"}],"version-history":[{"count":7,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3480\/revisions"}],"predecessor-version":[{"id":3514,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/posts\/3480\/revisions\/3514"}],"wp:attachment":[{"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/media?parent=3480"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/categories?post=3480"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/stepansuvorov.com\/blog\/wp-json\/wp\/v2\/tags?post=3480"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}